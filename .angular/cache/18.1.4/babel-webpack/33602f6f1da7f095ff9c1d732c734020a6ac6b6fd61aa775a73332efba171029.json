{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"../../../node_modules/@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(auth, router) {\n      this.auth = auth;\n      this.router = router;\n      this.loginUserData = {\n        userName: null,\n        password: null,\n        uniqueToken: null\n      };\n    }\n    ngOnInit() {}\n    loginUser(loginData) {\n      this.auth.loginUser(loginData).subscribe(res => {\n        alert(\"Login Success\");\n        if (res['password'] === \"your-admin-password\" && res['uniqueToken'] === \"xxxx-xxxx-xxxx\") {\n          this.auth.isAdmin = true;\n        }\n        this.auth.logInFlag = true;\n        this.router.navigate(['/items']);\n        this.auth.mailToAdmin.fromMailId = JSON.parse(JSON.stringify(res)).userName;\n      }, err => {\n        if (err.error.text === \"Invalid token\" || err.error.text === \"Invalid Password\") {\n          alert(err.error.text);\n        } else {\n          alert(\"Problem from our end...\");\n        }\n      });\n    }\n    static #_ = this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 22,\n      vars: 7,\n      consts: [[\"loginForm\", \"ngForm\"], [\"username\", \"ngModel\"], [\"pass\", \"ngModel\"], [1, \"py-5\"], [1, \"row\"], [1, \"col-md-6\", \"mx-auto\"], [\"id\", \"formLogin\", 1, \"anchor\"], [1, \"card\", \"rounded-0\"], [1, \"card-header\"], [1, \"mb-0\"], [1, \"card-body\"], [1, \"form\"], [1, \"form-group\"], [\"for\", \"uname1\"], [\"type\", \"text\", \"placeholder\", \"Enter token(Eg:- xxxx-xxxx-xxxx)\", \"name\", \"token\", \"required\", \"\", 1, \"form-control\", \"rounded-0\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"password\", \"placeholder\", \"Enter password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", \"rounded-0\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", \"value\", \"Login\", 1, \"btn\", \"btn-success\", \"float-right\", 3, \"click\", \"disabled\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\", 5);\n          i0.ɵɵelement(3, \"span\", 6);\n          i0.ɵɵelementStart(4, \"div\", 7)(5, \"div\", 8)(6, \"h3\", 9);\n          i0.ɵɵtext(7, \"Login\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 10)(9, \"form\", 11, 0)(11, \"div\", 12)(12, \"label\", 13);\n          i0.ɵɵtext(13, \"Enter Token\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 14, 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.loginUserData.uniqueToken, $event) || (ctx.loginUserData.uniqueToken = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 12)(17, \"label\");\n          i0.ɵɵtext(18, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"input\", 15, 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_19_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.loginUserData.password, $event) || (ctx.loginUserData.password = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"input\", 16);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_input_click_21_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.loginUser(ctx.loginUserData));\n          });\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          const loginForm_r2 = i0.ɵɵreference(10);\n          const username_r3 = i0.ɵɵreference(15);\n          const pass_r4 = i0.ɵɵreference(20);\n          i0.ɵɵadvance(14);\n          i0.ɵɵclassProp(\"is-invalid\", username_r3.invalid && username_r3.touched);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.loginUserData.uniqueToken);\n          i0.ɵɵadvance(5);\n          i0.ɵɵclassProp(\"is-invalid\", pass_r4.invalid && pass_r4.touched);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.loginUserData.password);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", loginForm_r2.form.invalid);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}